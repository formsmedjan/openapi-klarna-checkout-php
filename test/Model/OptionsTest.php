<?php
/**
 * OptionsTest
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  FormsmedjanKlarnaCheckout
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Klarna Checkout API V3
 *
 * API spec
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace FormsmedjanKlarnaCheckout\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * OptionsTest Class Doc Comment
 *
 * @category    Class
 * @description Options
 * @package     FormsmedjanKlarnaCheckout
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class OptionsTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "Options"
     */
    public function testOptions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "require_validate_callback_success"
     */
    public function testPropertyRequireValidateCallbackSuccess()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "acquiring_channel"
     */
    public function testPropertyAcquiringChannel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "vat_removed"
     */
    public function testPropertyVatRemoved()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "allow_separate_shipping_address"
     */
    public function testPropertyAllowSeparateShippingAddress()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "color_button"
     */
    public function testPropertyColorButton()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "color_button_text"
     */
    public function testPropertyColorButtonText()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "color_checkbox"
     */
    public function testPropertyColorCheckbox()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "color_checkbox_checkmark"
     */
    public function testPropertyColorCheckboxCheckmark()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "color_header"
     */
    public function testPropertyColorHeader()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "color_link"
     */
    public function testPropertyColorLink()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "date_of_birth_mandatory"
     */
    public function testPropertyDateOfBirthMandatory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "shipping_details"
     */
    public function testPropertyShippingDetails()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "title_mandatory"
     */
    public function testPropertyTitleMandatory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "additional_checkbox"
     */
    public function testPropertyAdditionalCheckbox()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "national_identification_number_mandatory"
     */
    public function testPropertyNationalIdentificationNumberMandatory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "additional_merchant_terms"
     */
    public function testPropertyAdditionalMerchantTerms()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "phone_mandatory"
     */
    public function testPropertyPhoneMandatory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "radius_border"
     */
    public function testPropertyRadiusBorder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "allowed_customer_types"
     */
    public function testPropertyAllowedCustomerTypes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "show_subtotal_detail"
     */
    public function testPropertyShowSubtotalDetail()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "additional_checkboxes"
     */
    public function testPropertyAdditionalCheckboxes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "verify_national_identification_number"
     */
    public function testPropertyVerifyNationalIdentificationNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "show_vat_registration_number_field"
     */
    public function testPropertyShowVatRegistrationNumberField()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
